"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[54],{26398:function(e,t,l){var i=l(26314);t.Z=void 0;var a=i(l(80984)),n=l(57437);t.Z=(0,a.default)((0,n.jsx)("path",{d:"M2.01 21 23 12 2.01 3 2 10l15 2-15 2z"}),"Send")},66054:function(e,t,l){l.r(t);var i=l(57437),a=l(2265),n=l(96507),s=l(49600),r=l(70812),o=l(67248),c=l(85269),d=l(5096),p=l(35009),m=l(46349),u=l(64494),x=l(14604),b=l(41637),h=l(64728),I=l(11093),f=l(26398);let g={m:[{label:"ChEBI",id:"ChEBI"},{label:"KEGG",id:"KEGG"},{label:"PubChem (CID)",id:"PubChem"},{label:"HMDB",id:"HMDB"}],q:[{label:"Uniprot Protein ID",id:"Uniprot Protein ID"},{label:"Entrez ID",id:"Entrez ID"},{label:"Ensembl Gene ID",id:"Ensembl Gene ID"},{label:"Ensembl Transcript ID ",id:"Ensembl Transcript ID"},{label:"Official Gene Symbol",id:"Official Gene Symbol"}],t:[{label:"Uniprot Protein ID",id:"Uniprot Protein ID"},{label:"Entrez ID",id:"Entrez ID"},{label:"Ensembl Gene ID",id:"Ensembl Gene ID"},{label:"Ensembl Transcript ID ",id:"Ensembl Transcript ID"},{label:"Official Gene Symbol",id:"Official Gene Symbol"}]},y=e=>{let{o:t,omicIdCol_i:l,setOmicIdCol_i:s,omicIdType_i:c,setOmicIdType_i:h,handleOmicIdChange:f}=e,{OMIC2NAME:y}=(0,I.S)(),j=(0,b.tc)().user["".concat(t,"2i")].columns.map(e=>({label:e,id:e}));return(0,i.jsxs)(n.Z,{sx:{display:"flex",flexDirection:"column",alignItems:"center"},children:[(0,i.jsx)(n.Z,{children:(0,i.jsx)(r.Z,{value:l,onChange:(e,l)=>{s(l),f(t,l,c)},isOptionEqualToValue:(e,t)=>e.id===t.id,id:"omic-id-column",options:j,sx:{width:250},renderInput:e=>(0,i.jsx)(o.Z,{...e,label:"".concat(y[t]," ID Column")}),renderOption:(e,t)=>(0,a.createElement)("li",{...e,key:t.label},t.label)})}),(0,i.jsx)(n.Z,{sx:{mt:4},children:(0,i.jsxs)(d.Z,{variant:"standard",fullWidth:!0,children:[(0,i.jsx)(p.Z,{shrink:!0,id:"demo-simple-select-label"}),(0,i.jsxs)(m.Z,{sx:{minWidth:"180px"},labelId:"demo-controlled-open-select-label",id:"demo-controlled-open-select",value:c,label:"ID Type",onChange:e=>{h(e.target.value),f(t,l,e.target.value)},children:[(0,i.jsx)(u.Z,{value:"",children:(0,i.jsx)("em",{children:"None"})}),g[t].map(e=>(0,i.jsx)(u.Z,{value:e,children:e.label},e.id))]}),(0,i.jsx)(x.Z,{children:"ID Type"})]})})]},t)},j=(e,t)=>{let l=e.filter(e=>e);return"m"==t?/^[0-9]+$/.test(l[0])?g.m[0]:/^C[0-9]+$/.test(l[0])?g.m[1]:/^HMDB[0-9]+$/.test(l[0])?g.m[3]:null:/^[OPQ][0-9][A-Z0-9]{3}[0-9]|[A-NR-Z][0-9]([A-Z][A-Z0-9]{2}[0-9]){1,2}$/.test(l[0])?g[t][0]:/^[0-9]+$/.test(l[0])?g[t][1]:/^ENS[A-Z]{0,3}G[0-9]+$/.test(l[0])?g[t][2]:/^ENS[A-Z]{0,3}T[0-9]+$/.test(l[0])?g[t][3]:/^[A-Z]+$/.test(l[0])?g[t][4]:null},Z=(e,t,l,i,a)=>{let n="";return n+=a+"_"+e.id,t.isCategorical&&(n+="_"+t.g1.id+"_"+t.g2.id),Object.keys(l).map(e=>{l[e]&&i[e]&&(n+="_"+e+"_"+l[e].id+"_"+i[e].id)}),n=n.replace(/[^a-zA-Z0-9]/g,"_")};t.default=function(e){let{setRId2info:t,fetchJobRun:d,setLoading:p}=e,{omics:m,mdataType:u,OS:x,f2x:I}=(0,b.tc)(),g=(0,b.tc)().user,v=(0,h.mX)(),C=(0,h.a0)().PWA,[E,D]=(0,a.useState)(C.MetaboID);(0,a.useEffect)(()=>{E?p(!1):l.e(794).then(l.t.bind(l,91794,19)).then(e=>{D(e),v({type:"set-pwa-attr",attr:"MetaboID",value:e}),p(!1),console.log("MetaboID loaded")})},[p,D,v,E]);let O=g.mdata,[_,S]=(0,a.useState)(C.mdataCol),[w,T]=(0,a.useState)(C.mdataCategorical),G=!C.OSsearch||C.OSsearch.id!=x.id,[N,P]=(0,a.useState)(!G&&C.omicIdCol?C.omicIdCol:m.reduce((e,t)=>({...e,[t]:null}),{})),[k,A]=(0,a.useState)(!G&&C.omicIdType?C.omicIdType:m.reduce((e,t)=>({...e,[t]:""}),{})),[M,$]=(0,a.useState)(!G&&C.omicIdR?C.omicIdR:m.reduce((e,t)=>({...e,[t]:null}),{})),q=async(e,l,i)=>{if(console.log(e,l,i),!l){$(t=>({...t,[e]:null})),t(t=>({...t,[e]:{}}));return}let a=g["".concat(e,"2i")].column(l.id),n=I[e],s=a.index.filter((e,t)=>n[t]),r=a.values.filter((e,t)=>n[t]),o=[],c={},d={};if(!i){if(!(i=j(r,e))){$(t=>({...t,[e]:null})),t(t=>({...t,[e]:{}}));return}A(t=>({...t,[e]:i}))}if("m"==e){let e=r.map(e=>E[i.id].indexOf(e));(o=e.map(e=>E.ChEBI[e])).map((t,l)=>{t&&(d[t]={xId:s[l],uId:r[l],Name:E.Name[e[l]]})})}else if("q"==e||"t"==e){let t,l,i=[],a=(e,t)=>new Promise(async(l,i)=>{console.log("Trying ",e);try{let i=await fetch(e,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({organism:x.id,query:t,target:"UNIPROTSWISSPROT_ACC"})});l(i)}catch(e){i(e)}});try{t=await a("https://biit.cs.ut.ee/gprofiler/api/convert/convert/",r)}catch(e){console.log(e),t=await a("https://biit.cs.ut.ee/gprofiler_beta/api/convert/convert/",r)}let n=await t.json();i=n.result.filter(e=>"None"!=e.converted&&1==e.n_converted);let c=i.map(e=>e.incoming);try{l=await a("https://biit.cs.ut.ee/gprofiler/api/convert/convert/",r.filter(e=>!c.includes(e)))}catch(e){console.log(e),l=await a("https://biit.cs.ut.ee/gprofiler_beta/api/convert/convert/",r.filter(e=>!c.includes(e)))}let p=await l.json();i.concat(p.result.filter(e=>"None"!=e.converted&&1==e.n_converted)),0==i.length&&alert("No protein/transcript ID could be mapped. Please, check that the correct species was selected"),i=i.map(t=>({...t,converted_prefix:"".concat(e,"_").concat(t.converted)}));let m={};s.map((e,t)=>m[e]=r[t]);let u={};i.map(e=>u[e.incoming]=e.converted_prefix),o=s.map(e=>u[m[e]]);let b={};r.map((e,t)=>b[e]=s[t]),i.map(e=>{d[e.converted_prefix]={uId:e.incoming,xId:b[e.incoming],name:e.name,description:e.description}})}s.map((e,t)=>{o[t]&&(c[e]=o[t])}),$(t=>({...t,[e]:c})),t(t=>({...t,[e]:d}))};return(0,i.jsxs)(n.Z,{sx:{display:"flex",justifyContent:"space-evenly",mt:4},children:[(0,i.jsxs)(n.Z,{sx:{width:"25%",display:"flex",flexDirection:"column",alignItems:"center"},children:[(0,i.jsx)(n.Z,{sx:{textAlign:"center",mt:7,position:"absolute",top:145},children:(0,i.jsx)(s.Z,{variant:"outlined",color:"primary",endIcon:(0,i.jsx)(f.Z,{}),disabled:!(_&&(!w.isCategorical||w.g1&&w.g2)&&Object.values(N).some(e=>e)&&m.every(e=>!(N[e]&&k[e])||M[e])),onClick:()=>{v({type:"set-pwa-params",mdataCol:_,mdataCategorical:w,omicIdCol:N,omicIdType:k,omicIdR:M,OS:x}),d(_,w,M,Z(_,w,N,k,x.id))},children:"Run Analysis"})}),(0,i.jsx)(n.Z,{sx:{display:"flex"},children:(0,i.jsx)(r.Z,{value:_,onChange:(e,t)=>{t&&(S(t),"categorical"==u[t.id].type?T(e=>({isCategorical:!0,colOpts:u[t.id].levels.map(e=>({label:e,id:e})),g1:null,g2:null})):T(e=>({isCategorical:!1,colOpts:[],g1:null,g2:null})))},isOptionEqualToValue:(e,t)=>e.id===t.id,id:"metadata-column",options:O.columns.filter(e=>"categorical"==u[e].type).map(e=>({label:e,id:e})),sx:{width:300},renderInput:e=>(0,i.jsx)(o.Z,{...e,label:"Metadata Column"}),renderOption:(e,t)=>(0,a.createElement)("li",{...e,key:t.label},t.label)})}),(0,i.jsxs)(n.Z,{sx:{display:"flex",mt:4,alignItems:"center",opacity:w.isCategorical?1:0,transition:"all 0.5s ease"},children:[(0,i.jsx)(n.Z,{children:(0,i.jsx)(r.Z,{value:w.g1,onChange:(e,t)=>T(e=>({...e,g1:t})),isOptionEqualToValue:(e,t)=>e.id===t.id,id:"metadata-column",options:w.colOpts,sx:{width:150},renderInput:e=>(0,i.jsx)(o.Z,{...e,label:"First Group"}),renderOption:(e,t)=>(0,a.createElement)("li",{...e,key:t.label},t.label)})}),(0,i.jsx)(n.Z,{sx:{px:2},children:(0,i.jsx)(c.Z,{children:"vs"})}),(0,i.jsx)(n.Z,{children:(0,i.jsx)(r.Z,{value:w.g2,onChange:(e,t)=>T(e=>({...e,g2:t})),isOptionEqualToValue:(e,t)=>e.id===t.id,id:"metadata-column",options:w.colOpts,sx:{width:150},renderInput:e=>(0,i.jsx)(o.Z,{...e,label:"Second Group"}),renderOption:(e,t)=>(0,a.createElement)("li",{...e,key:t.label},t.label)})})]})]}),(0,i.jsx)(n.Z,{sx:{width:"2%",borderWidth:"0px 1px 0px 0px",borderStyle:"dashed",borderColor:"#aaaaaa"}}),(0,i.jsx)(n.Z,{sx:{width:"55%",display:"flex",justifyContent:"space-evenly"},children:m.map(e=>(0,i.jsx)(y,{o:e,omicIdCol_i:N[e],setOmicIdCol_i:t=>P(l=>({...l,[e]:t})),omicIdType_i:k[e],setOmicIdType_i:t=>A(l=>({...l,[e]:t})),handleOmicIdChange:q},e))})]})}}}]);