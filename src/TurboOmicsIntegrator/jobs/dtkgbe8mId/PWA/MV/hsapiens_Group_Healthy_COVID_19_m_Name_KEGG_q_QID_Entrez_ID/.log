stdout: 2024-12-16 08:27:13,197 - INFO - Start PathIntegrate_SV.py
2024-12-16 08:27:13,197 - INFO - Reading index.json
stdout: 2024-12-16 08:27:13,197 - INFO - Reading mdata and extracting dependent variable
stdout: 2024-12-16 08:27:13,209 - INFO - Reading f2id.json
stdout: 2024-12-16 08:27:13,209 - INFO - Reading Xi files
stdout: 2024-12-16 08:27:13,209 - INFO - Reading Xm
stdout: 2024-12-16 08:27:13,358 - INFO - Reading Xq
stdout: 2024-12-16 08:27:13,441 - INFO - Reading Reactome gmt file
stdout: 2024-12-16 08:27:17,384 - INFO - Creating PathIntegrate object
stderr: Traceback (most recent call last):
  File "/home/proteo/projects/TurboPutative-web/src/TurboOmicsIntegrator/scripts/py/PathIntegrate/PathIntegrate_MV.py", line 201, in <module>
stderr:     main(params)
  File "/home/proteo/projects/TurboPutative-web/src/TurboOmicsIntegrator/scripts/py/PathIntegrate/PathIntegrate_MV.py", line 46, in main
stderr:     pi_model = pathintegrate.PathIntegrate(
  File "/home/proteo/miniconda3/envs/PathIntegrate/lib/python3.10/site-packages/pathintegrate/pathintegrate.py", line 40, in __init__
stderr:     self.omics_data_scaled = {k: pd.DataFrame(StandardScaler().fit_transform(v), columns=v.columns, index=v.index) for k, v in self.omics_data.items()}
  File "/home/proteo/miniconda3/envs/PathIntegrate/lib/python3.10/site-packages/pathintegrate/pathintegrate.py", line 40, in <dictcomp>
stderr:     self.omics_data_scaled = {k: pd.DataFrame(StandardScaler().fit_transform(v), columns=v.columns, index=v.index) for k, v in self.omics_data.items()}
  File "/home/proteo/miniconda3/envs/PathIntegrate/lib/python3.10/site-packages/sklearn/utils/_set_output.py", line 313, in wrapped
stderr:     data_to_wrap = f(self, X, *args, **kwargs)
  File "/home/proteo/miniconda3/envs/PathIntegrate/lib/python3.10/site-packages/sklearn/base.py", line 1098, in fit_transform
stderr:     return self.fit(X, **fit_params).transform(X)
  File "/home/proteo/miniconda3/envs/PathIntegrate/lib/python3.10/site-packages/sklearn/preprocessing/_data.py", line 878, in fit
stderr:     return self.partial_fit(X, y, sample_weight)
  File "/home/proteo/miniconda3/envs/PathIntegrate/lib/python3.10/site-packages/sklearn/base.py", line 1473, in wrapper
stderr:     return fit_method(estimator, *args, **kwargs)
  File "/home/proteo/miniconda3/envs/PathIntegrate/lib/python3.10/site-packages/sklearn/preprocessing/_data.py", line 914, in partial_fit
stderr:     X = self._validate_data(
  File "/home/proteo/miniconda3/envs/PathIntegrate/lib/python3.10/site-packages/sklearn/base.py", line 633, in _validate_data
stderr:     out = check_array(X, input_name="X", **check_params)
  File "/home/proteo/miniconda3/envs/PathIntegrate/lib/python3.10/site-packages/sklearn/utils/validation.py", line 887, in check_array
stderr:     dtype_orig = np.result_type(*dtypes_orig)
ValueError: at least one array or dtype is required
