openapi: 3.0.2

info:
  title: TurboPutative
  description: 'TurboPutative provides several application programming interfaces (APIs) to send jobs and query data programmatically. [Sample python code](assets/files/apiScripts/TurboPutative_API.py) is available to access server functions using API utilities.'
  contact:
    email: rafael.barrero@cnic.es
  version: 1.0.0
  
servers:
- url: https://proteomics.cnic.es/TurboPutative
#- url: http://localhost:8080/TurboPutative
#- url: http://turboputative.herokuapp.com

tags:

- name: Execute workflow
  description: Execute an entire workflow
  
- name: Execute module
  description: Execute a single module
  
- name: Parse compounds
  description: Process the name of the metabolites to remove the information related with the isomerism. For example, _(2E)-2-decenal_ will be converted to _decenal_
  
- name : Classify compounds
  description: Check if the compounds are characterized as human exogenous metabolites coming from food, drug, microbial, halogen, natural product or plants. For example, Histidine would be classified as food, drug and natural product.
  
paths:

  /api/execute:
    
    post:
    
      tags: 
        - Execute workflow
      
      summary: Run a complete workflow setting all parameters
  
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/allFiles'
      
      responses:
        200:
          $ref: '#/components/responses/execute200'
        400:
          description: Bad Request
          content: {}
          
    
  /api/execute/{module}:
    
    post:
    
      tags:
        - Execute module
    
      summary: Process your data using a single module
      
      parameters:
        - name: module
          in: path
          description: Module that is going to be executed (Tagger, REname, RowMerger or TPMetrics)
          required: true
          schema:
            type: string
            items:
              type: string
              enum:
                - Tagger
                - REname
                - RowMerger
                - TPMetrics
      
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/allFiles'
      
      responses:
        200:
          $ref: '#/components/responses/execute200'
        400:
          description: Bad Request
          content: {}
        404:
          description: Not Found
          content: {}

  
  /api/execute/status/{id}:
  
    get:
      
      tags:
        - Execute workflow
        - Execute module
      
      summary: Check job status
      
      parameters:
        - name: id
          in: path
          description: Identifier of the job
          required: true
          schema:
            type: string
      
      responses:
        
        200:
          description: Status can be READY, WAITING, RUNNING or FAILED
          content:
            application/json:
              schema:
                type: object
                properties:
                  job_id:
                    type: string
                  status:
                    type: string
          
        404:
          description: Not Found
          content: {}
          

  /results/{id}:
  
    get:
      
      tags:
        - Execute workflow
        - Execute module
      
      summary: Download results
      
      parameters:
      - name: id
        in: path
        description: Identifier of the job
        required: true
        schema:
          type: string
      
      responses:
        
        200:
          description: Download zip file with results
          content:
            application/zip:
              schema:
                type: string
                format: binary
                
        404:
          description: Not Found
          content: {}
  
  
  /api/parse:
  
    get:
    
      tags:
        - Parse compounds
      
      summary: Simplify compound names
      
      parameters:
      - name: compound
        in: query
        description: Name of the compound
        required: true
        schema:
          type: string
      
      responses:
      
        200:
          $ref: "#/components/responses/parse200"
      
        400:
          description: Bad Request
          content: {}
        
        404:
          description: Not Found
          content: {}
    
    
    post:
      
      tags:
        - Parse compounds
        
      summary: Simplify compound names (batch)
      
      requestBody:
        description: Batch with the name of the compounds
        content:
          application/json:
            schema:
              type: object
              properties:
                compound:
                  type: array
                  items:
                    type: string
              
              
      responses:
      
        200:
          $ref: "#/components/responses/parse200"

        400:
          description: Bad Request
          content: {}
        
        404:
          description: Not Found
          content: {}
          
          
  /api/classify:
  
    get:
    
      tags:
        - Classify compounds
      
      summary: Classify compound
      
      parameters:
      - name: compound
        in: query
        description: Name of the compound
        required: true
        schema:
          type: string
      
      responses:
      
        200:
          $ref: "#/components/responses/classify200"
      
        400:
          description: Bad Request
          content: {}
        
        404:
          description: Not Found
          content: {}
    
    
    post:
      
      tags:
        - Classify compounds
        
      summary: Classify compounds (batch)
      
      requestBody:
        description: Batch with the name of the compounds
        content:
          application/json:
            schema:
              type: object
              properties:
                compound:
                  type: array
                  items:
                    type: string
              
              
      responses:
      
        200:
          $ref: "#/components/responses/classify200"

        400:
          description: Bad Request
          content: {}
        
        404:
          description: Not Found
          content: {}
        

components:
  
  schemas:
    
    allFiles:
    
      type: object
      
      properties:
        parameters:
          description: Upload JSON file containing all parameters. [Example file (default)](assets/files/defaultParameters/parameters.json)
          
          type: string
          format: binary
      
        ms_table:
          description: Upload an excel table containing candidate metabolites. [Example file](assets/files/MS_experiment.tsv)
          type: string
          format: binary
      
        tm_table:
          description: Upload an excel table containing additional feature information (only if TPMetrics is selected). [Example file](assets/files/FeatureInfo.tsv)
          type: string
          format: binary
      
      required: [ms_table]
      
  
  responses:
  
    execute200:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              job_id:
                type: string
                example: C93X1
    
    parse200:
      description: JSON containing parsed compound names
      content:
        application/json:
          schema:
            type: object
            properties:
              parsedCompounds:
                type: array
                items:
                  type: string
    
    classify200:
      description: JSON containing compound classification
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                name:
                  type: string
                tags:
                  type: object
                  properties:
                    food:
                      type: boolean
                    drug:
                      type: boolean
                    microbial:
                      type: boolean
                    natural_product:
                      type: boolean
                    plant:
                      type: boolean
                    halogen:
                      type: boolean
                    peptide:
                      type: boolean
    
      

